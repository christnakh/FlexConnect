-- Users Table
CREATE TABLE Users (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(255),
    Email VARCHAR(255) UNIQUE,
    birth_date DATE,
    phone_number VARCHAR(24),
    Password VARCHAR(255),
    Location VARCHAR(255),
    Industry VARCHAR(255),
    Summary TEXT,
    ProfilePictureURL VARCHAR(255),
    random_url CHAR(15)
);

-- Education Table
CREATE TABLE Education (
    EducationID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    SchoolName VARCHAR(255),
    Degree VARCHAR(255),
    FieldOfStudy VARCHAR(255),
    StartYear YEAR,
    EndYear YEAR,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Experience Table
CREATE TABLE Experience (
    ExperienceID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    CompanyName VARCHAR(255),
    Title VARCHAR(255),
    Location VARCHAR(255),
    StartDate DATE,
    EndDate DATE,
    Description TEXT,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Skills Table
CREATE TABLE Skills (
    SkillID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    SkillName VARCHAR(255),
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Connections Table
CREATE TABLE Connections (
    ConnectionID INT AUTO_INCREMENT PRIMARY KEY,
    UserID1 INT,
    UserID2 INT,
    ConnectionStatus VARCHAR(255),
    ConnectedSince DATE, 
    FOREIGN KEY (UserID1) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (UserID2) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Jobs Table
CREATE TABLE Jobs (
    JobID INT AUTO_INCREMENT PRIMARY KEY,
    EmployerID INT,
    Title VARCHAR(255),
    Description TEXT,
    Location VARCHAR(255),
    PostedDate DATE,
    ApplicationDeadline DATE,
    FOREIGN KEY (EmployerID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Applications Table
CREATE TABLE Applications (
    ApplicationID INT AUTO_INCREMENT PRIMARY KEY,
    JobID INT,
    ApplicantID INT,
    ApplicationDate DATE,
    Status VARCHAR(255),
    FOREIGN KEY (JobID) REFERENCES Jobs(JobID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ApplicantID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Posts Table
CREATE TABLE Posts (
    PostID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    Content TEXT,
    PostDate DATETIME,
    ImageURL VARCHAR(255),
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- PostInteractions Table
CREATE TABLE PostInteractions (
    InteractionID INT AUTO_INCREMENT PRIMARY KEY,
    PostID INT,
    UserID INT,
    ReactionStatus BOOLEAN,
    Comment TEXT,
    InteractionDate DATETIME,
    FOREIGN KEY (PostID) REFERENCES Posts(PostID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Messages Table
CREATE TABLE Messages (
    MessageID INT AUTO_INCREMENT PRIMARY KEY,
    SenderID INT,
    ReceiverID INT,
    MessageText TEXT,
    Timestamp DATETIME,
    FOREIGN KEY (SenderID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ReceiverID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Groups Table
CREATE TABLE Groups (
    GroupID INT AUTO_INCREMENT PRIMARY KEY,
    GroupName VARCHAR(255),
    Description TEXT
);

-- UserGroups Table
CREATE TABLE UserGroups (
    UserGroupID INT AUTO_INCREMENT PRIMARY KEY,
    GroupID INT,
    UserID INT,
    Role VARCHAR(255),
    JoinedDate DATE,
    FOREIGN KEY (GroupID) REFERENCES Groups(GroupID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Endorsements Table
CREATE TABLE Endorsements (
    EndorsementID INT AUTO_INCREMENT PRIMARY KEY,
    SkillID INT,
    EndorsedByUserID INT,
    EndorsedUserID INT,
    FOREIGN KEY (SkillID) REFERENCES Skills(SkillID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (EndorsedByUserID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (EndorsedUserID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Recommendations Table
CREATE TABLE Recommendations (
    RecommendationID INT AUTO_INCREMENT PRIMARY KEY,
    RecommendedByUserID INT,
    RecommendedUserID INT,
    RecommendationText TEXT,
    Date DATE,
    FOREIGN KEY (RecommendedByUserID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (RecommendedUserID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Comments Table
CREATE TABLE Comments (
    CommentID INT AUTO_INCREMENT PRIMARY KEY,
    PostID INT,
    UserID INT,
    CommentText TEXT,
    CommentDate DATETIME,
    FOREIGN KEY (PostID) REFERENCES Posts(PostID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- School name
CREATE TABLE IF NOT EXISTS SchoolName(
    SchoolNameID INT(6) PRIMARY KEY AUTO_INCREMENT,
    school_Name VARCHAR(200) NOT NULL
) ENGINE = INNODB;


-- Degree
CREATE TABLE IF NOT EXISTS Degree(
    DegreeID INT(6) PRIMARY KEY AUTO_INCREMENT,
    degree_Type VARCHAR(50) NOT NULL
) ENGINE = INNODB;


-- Field of study
CREATE TABLE IF NOT EXISTS FieldStudy(
    FieldStudyID INT(6) PRIMARY KEY AUTO_INCREMENT,
    FieldStudyType VARCHAR(50) NOT NULL
) ENGINE = INNODB;


-- Skills
CREATE TABLE IF NOT EXISTS developerSkills(
    developerSkillsID INT(6) PRIMARY KEY AUTO_INCREMENT,
    skills_type VARCHAR(50) NOT NULL
) ENGINE=INNODB;


-- Apply job
CREATE TABLE IF NOT EXISTS ApplyJob(
    ApplyID INT PRIMARY KEY AUTO_INCREMENT,
    UserID INT,
    JobID INT,
    EmployerID INT,
    ConnectionStatus VARCHAR(255),
    ConnectedSince DATE, 
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (JobID) REFERENCES Jobs(JobID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (EmployerID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = INNODB;
